import numpy as np
data1=[6,7,8,9.0]
arr1=np.array(data1)
arr1
//
data1=[6,7,8,9.0]
arr1=np.array(data1,dtype='int16')
arr1
//
data2=[[6,7,8,9.0],[6,7,8,9.0]]
arr2=np.array(data2)
arr2
//
print(np.zeros(5))
print(np.zeros(5,dtype='int16'))
print(np.zeros((2,1)))

x=np.ones((3,3))
print(np.zeros_like(x))
//
a=([1,2,3],[4,5,6])
np.empty_like(a)

np.full((2,2),10)

np.full((3,2),[1,2])

np.eye(2,dtype='int16')

np.eye(3,k=1)

np.eye(2,5)

np.identity(3)
//
print(np.arange(3))
print(np.arange(3.0))
print(np.arange(3,7))
print(np.arange(10,1,-2))
//
list_1=[1,2]
arr_2=np.asarray(list_1)
print(list_1,arr_2,sep='\n')
//
arr=np.array([1,2])
arr_2=np.asarray(arr)
print(arr,arr_2,sep='\n')
//
list_1=[1,2]
arr_array=np.asarray(list_1)
arr_asarray=np.asarray(arr)
print(arr_array is arr_asarray,arr_array is list_1,arr_asarray is list_1)

arr=np.array([1,2])
arr_array=np.array(arr)
arr_asarray=np.asarray(arr)

print(arr_array is arr)
print(arr_asarray is arr)

arr=np.array([1,2])
arr_asarray=np.asarray(arr,'float64')
print(arr,arr_asarray,arr_asarray is arr,sep='\n')
//
add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])
print('shape:',add_nd.shape)
print('size:',add_nd.size)
print('ndim:',add_nd.ndim)
print('itemsize:',add_nd.itemsize)
print('dtype:',add_nd.dtype)
//
arr=np.array([1,2,3,4,5],dtype='int64')
arr.dtype
//
float_arr=arr.astype('float64')
float_arr.dtype
//
arr=np.array([3.7,6.4,2.5])
print(arr)

int_arr=arr.astype('int32')
print(int_arr)
//
string_arr=np.array(['2','5.5','3.3'])
int_arr=string_arr.astype('float64')
print(string_arr,int_arr,sep='\n')
//
arr=np.arange(10)

print(arr)
print(arr[0],arr[3])
print(arr[1:3])
print(arr[1:8:2])
print(arr[1:])
//
arr_2d=np.array([[1,2,3,11],[4,5,6,22],[7,8,9,33],[10,11,12,44]])
print(arr_2d)

print(arr_2d[0][0])
print(arr_2d[0,0])
print(arr_2d[0])
print(arr_2d[0:2,2:4])
print(arr_2d[:2,2:])
//
add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])

print(add_nd[0])
print(add_nd[0,0])
print(add_nd[1,0])

print(add_nd[1,0,0])
print(add_nd[1,1:,1:])
//
add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])

add_nd[1,0,0]=111
print(add_nd,end='\n******************\n')

add_nd[1,1:,1:]=555
print(add_nd,end='\n******************\n')

add_nd[1,1:,1:]=[1,2]
print(add_nd,end='\n******************\n')

add_nd[1,1:,1:]=[[1,2],[3,4]]
print(add_nd)
//
add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])

new_arr=add_nd[1,1:,1:]
print(new_arr,end='\n******************\n')

new_arr[:]=55
print(new_arr,end='\n******************\n')
print(add_nd)

add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])
print('===========拷贝的方法==========')
new_arr=add_nd[1,1:,1:].copy()
new_arr[:]=55
print(new_arr,end='\n******************\n')
print(add_nd)
//
add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])
print('shape:',add_nd.shape)

print('通过修改ndarray.shpe新数组:')
add_nd.shape=(3,6)
print(add_nd)
//
add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])

new_arr=add_nd.reshape(6,3)
print('ndarray.reshape方法生成的新数组：')
print(new_arr)
print('ndarray.reshape方法不改变原来的数组：')
print(add_nd)

new_arr1=np.reshape(add_nd,(6,3))
print('ndarray.reshape方法生成的新数组：')
print(new_arr1)
print('ndarray.reshape方法不改变原来的数组：')
print(add_nd)
//
add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])

add_nd.resize(2,6,5)
print('ndarray.resize方法改变原来的数组，不生成新的数组')
print(add_nd)

add_nd=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])

new_add=np.resize(add_nd,(2,6,5))
print('np.resize方法生成的新数组：')
print(new_arr1)
print('np.resize方法不改变原来的数组：')
print(add_nd)
//
arr_2d=np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])
new_add=np.transpose(arr_2d)

print(arr_2d.shape,new_add.shape)
print(new_add is arr_2d,arr_2d,new_add,sep='\n***********************\n')
//
arr_2d=np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])
new_add=arr_2d.T

print(arr_2d.shape,new_add.shape)
print(new_add is arr_2d,arr_2d,new_add,sep='\n***********************\n')
//
arr_2d=np.array([[[[1,2,3],[4,5,6],[1,2,3],[4,5,6]],[[7,8,9],[10,11,12],[1,2,3],[4,5,6]]],[[[1,2,3],[4,5,6],[1,2,3],[4,5,6]],[[7,8,9],[10,11,12],[1,2,3],[4,5,6]]]])
new_add=np.transpose(arr_2d)

print(arr_2d.shape,new_add.shape)
print(new_add is arr_2d)
//
arr_2d=np.array([[[[1,2,3],[4,5,6],[1,2,3],[4,5,6]],[[7,8,9],[10,11,12],[1,2,3],[4,5,6]]],[[[1,2,3],[4,5,6],[1,2,3],[4,5,6]],[[7,8,9],[10,11,12],[1,2,3],[4,5,6]]]])
new_add=arr_2d.T

print(arr_2d.shape,new_add.shape)
print(new_add is arr_2d)
//
add_nd1=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])
add_nd2=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[11,22,33],[44,55,66],[77,88,99]]])

axis_0=np.concatenate((add_nd1,add_nd1))
print(axis_0.shape)
axis_1=np.concatenate((add_nd1,add_nd1),axis=1)
print(axis_1.shape)
axis_2=np.concatenate((add_nd1,add_nd1),axis=2)
print(axis_2.shape)
//
arr3=np.array([[1],[2],[3]])
arr4=np.array([[4],[5],[6]])
print(arr3.shape,arr4.shape)

print(np.hstack((arr3,arr4)))
print(np.vstack((arr3,arr4)))
//
x=np.array((1,2,3,4,5))
print(x)

print(x+2)
print(x*2)
print(x/2)
print(x**2)
//
x=np.array((1,2,3,4,5))
y=np.array((2,3,4,5,6))

print(x+y)
print(x*y)
print(x/y)
print(x**y)
//
x=np.array(((1,),(2,),(3,),(4,)))
y=np.array((((1,2,3,4,5),),((1,2,3,4,5),)))
print(x,y,sep='\n**********************\n',end='\n**********************\n')
print(x.shape,y.shape,end='\n**********************\n')
print(x+y)
//
x_re=np.arange(4)
x=x_re.reshape(4,1)
print(x)

y=np.arange(5)
print(y)

print(x+y)
//
x=np.arange(8)
print(np.append(x,8))
print(np.append(x,[[3,4],[8,7]]))

x=np.arange(8).reshape(2,4)
print(x)
print(np.append(x,[[3,4],[8,7]]))
//
x=np.zeros((1,8))
y=np.ones((3,8))
print(x,y,sep='\n')
new_nd=np.append(x,y,axis=0)
print(new_nd.shape,new_nd)
//
x=np.zeros((8,3))
y=np.ones((8,4))
print(x,y,sep='\n')
new_nd=np.append(x,y,axis=1)
print(new_nd.shape,new_nd)
//
arr_sort=np.arange(40,0,-1).reshape(4,2,5)
print(arr_sort)
//
print(np.sort(arr_sort,axis=0))
//
print(np.sort(arr_sort,axis=1))
//
print(np.sort(arr_sort,axis=2))
//
arr_sort=np.arange(40,0,-1).reshape(4,2,5)
print(arr_sort)
//
print(np.sort(arr_sort,axis=2))
//
print(np.sort(arr_sort))
//
a=np.array([[1,3,7,5],[2,6,4,8]])
print(a)
print('=====================')
print(np.argsort(a))
print('=====================')
print(np.argsort(a,axis=0))
print('=====================')
print(np.argsort(a,axis=1))
//
one_dim_array = np.array([1, 4, 5, 3, 7, 2, 6])
print(np.argmax(one_dim_array))

two_dim_array = np.array([[1, 3, 5], [9, 4, 3]])
print(two_dim_array)
max_index_axis4 = np.argmax(two_dim_array)
max_index_axis0 = np.argmax(two_dim_array, axis = 0)
max_index_axis1 = np. argmax(two_dim_array, axis = 1)
print('若轴不指定: ',max_index_axis4)
print('axis = 0: ',max_index_axis0)
print('axis = 1: ',max_index_axis1)
//
x = np.arange(0, 100, 20)
print(x)
print(np.sin(x))

x = np.array(([1, 2, 3], [4, 5, 6], [7, 8, 9]))
print(x)
//
a = np.array([1.0,5.55, 123, 0.567, 25.562])
print ('原数组：')
print(a)
print('舍入后：')
print('舍入位为默认值：',np.around(a))
print('舍入位为1：',np.around(a,decimals = 1))
print('舍入位为-1：',np.around(a,decimals = -1))
//
x = np.array((1,2,3))
y = np.array((4,5,6))
print(np.dot(x,y))
print(x.dot(y))
print(sum(x*y))
//